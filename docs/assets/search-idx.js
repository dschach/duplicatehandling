export default [
    {
        "title": "Home",
        "fileName": "index.html",
        "text": "Home Welcome to Duplicate Records Handler!"
    },
    {
        "title": "DuplicateRecordHandlersTest",
        "fileName": "DuplicateRecordHandlersTest.html",
        "text": "DuplicateRecordHandlersTest Tests for DuplicateRecord trigger handlers Signature @isTest private class DuplicateRecordHandlersTest See DuplicateRecordItemTriggerHandler David Schach 02/28/2022 DuplicateRecordHandlersTest Methods dupeAccountsCreate() dupeAccountsMerge() dupeAccountsUpdate() dupeContactsCreate() dupeContactsMerge() dupeLeadsCreate() dupeLeadsMerge() makeData() setupAccounts(acctCount) setupContact(acctId) setupContacts(accts) setupLead() dupeAccountsCreate() Signature @isTest private static void dupeAccountsCreate() dupeAccountsMerge() Signature @isTest private static void dupeAccountsMerge() dupeAccountsUpdate() Signature @isTest private static void dupeAccountsUpdate() dupeContactsCreate() Signature @isTest private static void dupeContactsCreate() dupeContactsMerge() Signature @isTest private static void dupeContactsMerge() dupeLeadsCreate() Signature @isTest private static void dupeLeadsCreate() dupeLeadsMerge() Signature @isTest private static void dupeLeadsMerge() makeData() Signature @TestSetup static void makeData() setupAccounts(acctCount) Signature static List<Account> setupAccounts(Integer acctCount) setupContact(acctId) Signature static Contact setupContact(Id acctId) setupContacts(accts) Signature static List<Contact> setupContacts(List<Account> accts) setupLead() Signature static Lead setupLead()"
    },
    {
        "title": "DuplicateRecordItemTriggerHandler",
        "fileName": "DuplicateRecordItemTriggerHandler.html",
        "text": "DuplicateRecordItemTriggerHandler Trigger Handler for DuplicateRecordItem Signature public inherited sharing class DuplicateRecordItemTriggerHandler See DuplicateRecordHandlersTest David Schach 02/28/2022 DuplicateRecordItemTriggerHandler Methods assortDuplicateItems(newRecords) Assign object type and then handle all records handleAccounts(newAccounts, recordIDs) Handle Accounts(may be duplicated for any object) handleContacts(newContacts, recordIDs) Handle Contacts(may be duplicated for any object) handleLeads(newLeads, recordIDs) Handle Leads(may be duplicated for any object) handleTrigger(newRecords, oldRecords, newRecordsMap, oldRecordsMap, triggerEvent) Handle all trigger records updateDuplicateRecordSet(newRecords) Update the parent DuplicateRecordItem  records assortDuplicateItems(newRecords) Assign object type and then handle all records Signature private void assortDuplicateItems(List<DuplicateRecordItem> newRecords) Parameters newRecords Type: List<DuplicateRecordItem> Trigger.new Author David Schach handleAccounts(newAccounts, recordIDs) Handle Accounts(may be duplicated for any object) Signature private void handleAccounts(List<DuplicateRecordItem> newAccounts, Set<Id> recordIDs) Parameters newAccounts Type: List<DuplicateRecordItem> Trigger.new recordIDs Type: Set<Id> AccountIDs, which are technically in newAccounts, but included for simplicity Author David Schach handleContacts(newContacts, recordIDs) Handle Contacts(may be duplicated for any object) Signature private void handleContacts(List<DuplicateRecordItem> newContacts, Set<Id> recordIDs) Parameters newContacts Type: List<DuplicateRecordItem> Trigger.new recordIDs Type: Set<Id> ContactIDs, which are technically in newContacts, but included for simplicity Author David Schach handleLeads(newLeads, recordIDs) Handle Leads(may be duplicated for any object) Signature private void handleLeads(List<DuplicateRecordItem> newLeads, Set<Id> recordIDs) Parameters newLeads Type: List<DuplicateRecordItem> Trigger.new recordIDs Type: Set<Id> LeadIDs, which are technically in newLeads, but included for simplicity Author David Schach handleTrigger(newRecords, oldRecords, newRecordsMap, oldRecordsMap, triggerEvent) Handle all trigger records Signature public void handleTrigger(\t\tList<DuplicateRecordItem> newRecords,\t\tList<DuplicateRecordItem> oldRecords,\t\tMap<Id, DuplicateRecordItem> newRecordsMap,\t\tMap<Id, DuplicateRecordItem> oldRecordsMap,\t\tSystem.TriggerOperation triggerEvent\t) Parameters newRecords Type: \t\tList<DuplicateRecordItem> Trigger.new oldRecords    Trigger.old newRecordsMap Type: DuplicateRecordItem> Trigger.newMap oldRecordsMap Type: DuplicateRecordItem> Trigger.oldMap triggerEvent  Trigger context enum Author David Schach updateDuplicateRecordSet(newRecords) Update the parent DuplicateRecordItem  records Signature private void updateDuplicateRecordSet(List<DuplicateRecordItem> newRecords) Parameters newRecords Type: List<DuplicateRecordItem> Trigger.new Author David Schach"
    }
];
